Description: Updates the test to compile with the Servlet 3.0 API
Author: Emmanuel Bourg <ebourg@apache.org>
Forwarded: not-needed
--- a/src/test/java/org/apache/commons/fileupload/MockHttpServletRequest.java
+++ b/src/test/java/org/apache/commons/fileupload/MockHttpServletRequest.java
@@ -22,15 +22,24 @@
 import java.io.InputStream;
 import java.io.UnsupportedEncodingException;
 import java.security.Principal;
+import java.util.Collection;
 import java.util.Enumeration;
 import java.util.Locale;
 import java.util.Map;
 
+import javax.servlet.AsyncContext;
+import javax.servlet.DispatcherType;
 import javax.servlet.RequestDispatcher;
+import javax.servlet.ServletContext;
+import javax.servlet.ServletException;
 import javax.servlet.ServletInputStream;
+import javax.servlet.ServletRequest;
+import javax.servlet.ServletResponse;
 import javax.servlet.http.Cookie;
 import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpSession;
+import javax.servlet.http.Part;
 
 public class MockHttpServletRequest implements HttpServletRequest {
 
@@ -239,6 +248,10 @@
         return null;
     }
 
+    public String changeSessionId() {
+        return null;
+    }
+
     /**
      * @see javax.servlet.http.HttpServletRequest#isRequestedSessionIdValid()
      */
@@ -323,6 +336,10 @@
         return iLength;
     }
 
+    public long getContentLengthLong() {
+        return getContentLength();
+    }
+
     /**
      * For testing attack scenarios in SizesTest.
      */
@@ -536,6 +553,56 @@
         return null;
     }
 
+    public boolean authenticate(HttpServletResponse response) throws IOException, ServletException {
+        return false;
+    }
+
+    public void login(String username, String password) throws ServletException {
+    }
+
+    public void logout() throws ServletException {
+    }
+
+    public Collection<Part> getParts() throws IOException, ServletException {
+        return null;
+    }
+
+    public Part getPart(String name) throws IOException, ServletException {
+        return null;
+    }
+
+    public ServletContext getServletContext() {
+        return null;
+    }
+
+    public AsyncContext startAsync() throws IllegalStateException {
+        return null;
+    }
+
+    public AsyncContext startAsync(ServletRequest servletRequest, ServletResponse servletResponse) throws IllegalStateException {
+        return null;
+    }
+
+    public boolean isAsyncStarted() {
+        return false;
+    }
+
+    public boolean isAsyncSupported() {
+        return false;
+    }
+
+    public AsyncContext getAsyncContext() {
+        return null;
+    }
+
+    public DispatcherType getDispatcherType() {
+        return null;
+    }
+
+    public javax.servlet.http.HttpUpgradeHandler upgrade(Class handlerClass) throws IOException, ServletException {
+        return null;
+    }
+
     private static class MyServletInputStream
         extends javax.servlet.ServletInputStream {
 
@@ -564,6 +631,17 @@
             return in.read(b, off, len);
         }
 
+        public boolean isFinished() {
+            return false;
+        }
+
+        public boolean isReady() {
+            return true;
+        }
+
+        public void setReadListener(javax.servlet.ReadListener listener) {
+        }
+
     }
 
 }
